[supervisord]
user=root
nodaemon=true
logfile=/var/log/supervisord.log
pidfile=/run/supervisord.pid

[program:acme.sh]
command=/entry.sh daemon
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
redirect_stderr=true
autostart=true
autorestart=true
startretries=0

[program:v2ray]
command=/usr/local/bin/v2ray run -c /etc/v2ray/v2ray-config.json
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
redirect_stderr=true
autostart=true
autorestart=true
startretries=0

[program:x-ui]
command=/usr/local/bin/x-ui
directory=/usr/local/bin
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
redirect_stderr=true
autostart=true
autorestart=true
startretries=0

[program:xray]
# command=/usr/local/bin/xray run -c /etc/xray/xray-config.json
command=/usr/local/bin/xray run -confdir /etc/xray/conf
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
redirect_stderr=true
autostart=true
autorestart=true
startretries=0

[program:nginx]
command=nginx -g 'daemon off;'
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
redirect_stderr=true
autostart=true
autorestart=true
startretries=0

# The below configure can be applied when Docker orchestrator like Docker Swarm or K8S is used.
# By default, supervisor will attempt to restart a failed process.
# Refer to http://supervisord.org/configuration.html for more info.
#[eventlistener:processes]
#command=stop-supervisor.sh
#events=PROCESS_STATE_STOPPED, PROCESS_STATE_EXITED, PROCESS_STATE_FATAL
[eventlistener:exit]
command=bash -c "printf 'READY\n' && while read line; do kill -SIGQUIT $PPID; done < /dev/stdin"
events=PROCESS_STATE_FATAL,PROCESS_STATE_STOPPED,PROCESS_STATE_EXITED
